apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mq-producer
  name: mq-producer
  namespace: demo-k8s
spec:
  selector:
    matchLabels:
      app: mq-producer
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: mq-producer
    spec:
      containers:
        - name: mq-producer
          image: <image>:<tag> # {"$imagescan": "mq-producer"}
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          env:
          - name: USERNAME
            value: adamkoro
          - name: PASSWORD
            value: legostarwars99
          - name: VHOST
            value: /
          - name: PORT
            value: "5672"
          - name: MQHOST
            value: rabbitmq.demo-k8s.svc.cluster.local
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /producer/v1/health
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /producer/v1/ping
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsUser: 10000

